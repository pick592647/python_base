# 类型转换四个函数 int() float() str() bool()
# int() 可以用来将其他的对象转换为整型
# 规则：
#   布尔值：True -> 1   False -> 0
#   浮点数：直接取整，省略小数点后的内容
#   字符串：合法的整数字符串，直接转换为对应的数字
#           如果不是一个合法的整数字符串，则报错 ValueError: invalid literal for int() with base 10: '11.5'
#   对于其他不可转换为整型的对象，直接抛出异常 ValueError
# float() 和 int()基本一致，不同的是它会将对象转换为浮点数
# str() 可以将对象转换为字符串
#  True -> 'True'
#  False -> 'False'
#  123 -> '123' 
#  。。。
#  bool() 可以将对象转换为布尔值，任何对象都可以转换为布尔值
#   规则：对于所有表示空性的对象都会转换为False，其余的转换为True
#       哪些表示的空性：0 、 None 、 '' 。。。

a = True

# 调用int()来将a转换为整型
# int()函数不会对原来的变量产生影响，他是对象转换为指定的类型并将其作为返回值返回
# 如果希望修改原来的变量，则需要对变量进行重新赋值
a = int(a)

a = False
a = int(a)

a = '123'
a = int(a)

a = 11.6
a = int(a)

a = '11.5'
# a = int(a)

a = None
# a = int(a)

a = 1
a = float(a)

a = False
a = float(a)

a = 123
a = str(a)

a = None
a = bool(a)

print('a =',a)
print('a的类型是',type(a))
# b = 456
# print('hello'+str(b))

## 对象（object）
# Python 是一门面向对象的语言
# 一切皆对象
# 程序运行当中，所有数据都是存储到内存当中然后再运行的！
# 对象就是内存中专门用来存储指定数据的一块区域
# 对象实际上就是一个容器，专门用来存储数据
# 像我们之前学习过的数值，字符串，布尔值，None都是对象
## 对象的结构
# 每个对象中都要保存三种数据
#   id(标识):id用来标识对象的唯一性，每一个对象都有一个唯一的id
#       可以通过id()函数来查看对象的id，id由解析器生成的，再Cpython中，
#        id就是对象的内存地址，对象一旦创建，id就无法更改
#   type(类型)：标识当前对象所属的类型，比如：int,str,float,bool...
#       类型决定了对象的哪些功能，Python是一门强类型语言，对象一旦创建，无法
#       改变，通过type()函数查看结果
#   value(值)：通过print()函数所打印出来的就是值；
#        对于有些对象可以改变，有些对象的值不可改变；
#        分为可变对象和不可变对象
## 变量和对象
# a = 3 对象并没有直接存储到对象中，在python中变量更像是给对象起了个别名
# a = 123 a中存放的是地址，即变量中存储的不是变量的值，而是
# 对象的id（地址），当我们使用变量时，实际上就是通过对象的id进行访问对象
# 变量中保存的对象，只有在为变量重新赋值时，才会改变
# 变量和变量之间是相互独立的，修改一个变量不会影响另一个变量
## 类型转换
# 所谓的类型变换并不会改变本身的类型，而是根据当前对象的值创建一个新的对象
#  